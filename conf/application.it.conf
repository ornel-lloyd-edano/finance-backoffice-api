include "development.conf"

play.evolutions.enabled = false

play.modules.disabled += "play.modules.swagger.SwaggerModule"
play.modules.disabled += "tech.pegb.backoffice.application.modules.KafkaModule"

# might be replaced with real SQL engine
db.backoffice {
  url = "jdbc:mysql://192.168.35.101:3306/integration?autoReconnect=true&characterEncoding=utf-8&connectionCollation=utf8_unicode_ci&useSSL=false&useAffectedRows=true"
  # url = "jdbc:mysql://localhost:3306/integration_test_backoffice_pegb_wallet_db?autoReconnect=true&characterEncoding=utf-8&connectionCollation=utf8_unicode_ci&useSSL=false&useAffectedRows=true"
  url = ${?MYSQL_DATABASE_URL}
  username = "scala"
  username = ${?MYSQL_DATABASE_USER}
  # username = "pegb_user"
  password = "apX8[5}]t_>hZm#F<z7YYLLZ$5>[@w<^"
  password = ${?MYSQL_DATABASE_PASSWORD}
  # password = "LVEuwTYNeAAOIYp8"
  hikaricp {
    # Minimum number of idle connections maintained in the pool.
    minimumIdle = 1
    # The maximum number of connections to make.
    maximumPoolSize = 4
  }
}

// TODO : investigate how to not rely on alphabetical naming of db
db.reports {
  schema = "pegb_wallet_dwh_it"
  schema = ${?POSTGRES_DATABASE_SCHEMA}
  driver = "org.postgresql.Driver"  #"org.mariadb.jdbc.Driver"  #"com.mysql.jdbc.Driver"
  driver = ${?POSTGRES_DATABASE_DRIVER}
  # JDBC connection string. "useAffectedRows" must be set to true.
  #url = "jdbc:mysql://localhost:3306/pegb_wallet_db?autoReconnect=true&characterEncoding=utf-8&connectionCollation=utf8_unicode_ci&useSSL=false&useAffectedRows=true"
  #url = "jdbc:mysql://172.30.2.50:3306/pegb_wallet_db_v3?autoReconnect=true&characterEncoding=utf-8&connectionCollation=utf8_unicode_ci&useSSL=false&useAffectedRows=true"
  url = "jdbc:postgresql://192.168.35.70:5432/dwh?autoReconnect=true&characterEncoding=utf-8&connectionCollation=utf8_unicode_ci&useSSL=false"
  url = ${?POSTGRES_DATABASE_URL}

  hikaricp {
    # Whether autocommit should be used
    autoCommit = true
    # The connection timeout
    connectionTimeout = 10 seconds
    # The idle timeout
    idleTimeout = 10 minutes
    # The max lifetime of a connection
    maxLifetime = 30 minutes
    # If non null, the query that should be used to test connections
    connectionTestQuery = "SELECT 1"
    # Minimum number of idle connections maintained in the pool.
    minimumIdle = 10
    # The maximum number of connections to make.
    maximumPoolSize = 20
    # If non null, sets the name of the connection pool. Primarily used for stats reporting.
    poolName = "reports"
    # A SQL statement that will be executed after every new connection creation before adding it to the pool
    connectionInitSql = "SELECT 1"
    # If non null, sets the transaction isolation level
    transactionIsolation = TRANSACTION_READ_COMMITTED
    # The validation timeout to use
    validationTimeout = 5 seconds
  }
}


couchbase {
  timeout = 30 seconds
  user = ""
  password = ""
  url = "http://192.168.35.69:8091" #"http://172.30.1.44:8091"
  url = ${?COUCHBASE_URL}
  docs {
    buckets {
      files {
        name = "it_documents"
        name = ${?COUCHBASE_DOCS_BUCKET_NAME}
        password = ""
        password = ${?COUCHBASE_DOCS_BUCKET_PASSWORD}
      }
    }
  }
}

document.expiration = 30 minutes

hdfs {
  uri = "hdfs://192.168.35.130:8020"  #"hdfs://172.30.1.50:8020"
  uri = ${?HDFS_URI}
  document-path = "/tmp/test_integration_documents"
  document-path = ${?HDFS_DOCUMENT_PATH}
  replication = "1"
  replication = ${?HDFS_REPLICATION}
}

pagination.defaultLimit = 4
pagination.defaultLimit = ${?PAGINATION_LIMIT}
pagination.max-cap = 5
pagination.max-cap = ${?PAGINATION_MAX_CAP}

default {
  locale = "en-US"
  locale = ${?DEFAULT_LOCALE}
  platform = "web"
  platform = ${?DEFAULT_PLATFORM}
}

hosts {
  main-backoffice-api = "http://127.0.0.1:4444" #"http://192.168.35.57:8601" //in dev env
  main-backoffice-api = ${?MAIN_BO_HOST}
  url {
    backoffice-aggregation = "/api/aggregations"
    backoffice-aggregation = ${?BACKOFFICE_AGGREGATION}
    backoffice-aggregation-margin = "/api/aggregations/gross_revenue_margin"
    backoffice-aggregation-margin = ${?BACKOFFICE_AGGREGATION_MARGIN}
  }
}

aggregations {
  revenue-step = 1

  default-num-days-datasource-switch = 0

  float-user-balance-percentage-institution-map-key = "float_user_balance_percentage_institution_map"

  is-on-the-fly = false

  future-timeout = 10 seconds
}

date-time-range {
  start-limit-in-days = 9999

  end-limit-in-days = 9999

  start-end-limit-in-days = 9999
}