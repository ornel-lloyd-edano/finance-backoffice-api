include "development.conf"

play.filters.disabled += "play.filters.hosts.AllowedHostsFilter"
play.modules.disabled += "tech.pegb.backoffice.application.modules.KafkaModule"
play.modules.disabled += "play.api.cache.ehcache.EhCacheModule"
play.modules.disabled += "play.modules.swagger.SwaggerModule"
play.evolutions.db.backoffice.enabled = true
play.evolutions.db.reports.enabled = false

db.reports {
  schema = "pegb_wallet_dwh"
  driver = "org.h2.Driver"
  url = "jdbc:h2:mem:pegb_wallet_dwh;MODE=PostgreSQL;DATABASE_TO_UPPER=FALSE;IGNORECASE=TRUE;INIT=CREATE SCHEMA IF NOT EXISTS pegb_wallet_dwh"
  username = ""
  password = ""
  // logSql = true
}

db.backoffice {
  driver = "org.h2.Driver"
  url = "jdbc:h2:mem:pegb_wallet_db;MODE=MYSQL;DATABASE_TO_UPPER=FALSE;IGNORECASE=TRUE;INIT=CREATE SCHEMA IF NOT EXISTS pegb_wallet_db"
  username = ""
  password = ""
  // logSql = true
}

business-user {

  activated-status = "ACTIVE"
  not-yet-activated-status = "NEW"
  allow-update-status = ""
  email-attribute-name = "EMAIL"
  address-attribute-name = "ADDRESS"
  phone-number-attribute-name = "PHONE_NUMBER"

  registration {

    user-type = ""
    default-subscription = ""
    default-segment = ""
    default-tier = ""
    default-status = ""
    activation-email-template = "Dear #name, Congratulations! You are activated. Your tier is #tier. Your segment is #segment. Your customer type is #type."
    default-business-user-type = ""
    default-account-type = ""
  }

}

account.newly-created-status = "ACTIVE"
wallet.default-currency = ""


card-application {
  new-application-type = "NEW_APPLICATION"
  default-status = "PENDING"
}

pagination.defaultLimit = 4
pagination.defaultLimit = ${?PAGINATION_LIMIT}
pagination.max-cap = 5
pagination.max-cap = ${?PAGINATION_MAX_CAP}

kafka {
  schema.registry.url = "http://localhost:8081"
  common {
    bootstrap.servers = "localhost:9092"
  }
  consumer {
  }
  producer {
    topic-suffix = "backoffice_db-1.0.0"
  }
}

hosts {
  timeout.seconds = 5

  main-backoffice-api = "http://localhost:9000" //"http://172.30.1.41:8601" //in dev env
  main-backoffice-api = ${?MAIN_BO_HOST}

  backoffice-auth-api = "http://localhost:9001" //in dev env
  backoffice-auth-api = ${?BO_AUTH_HOST}

  placeholder {
    main-backoffice-api = "$backoffice_api_host"
    main-backoffice-api = ${?MAIN_BO_PLACEHOLDER}
  }
}

api-keys {
  backoffice-auth-api = "some long unmemorizable string of characters"
}

authentication {
  require-captcha = true
}

maker-checker {
  exempted-modules = "scopes,permissions,back_office_users,roles,business_units,tasks,wallet_applications"
}